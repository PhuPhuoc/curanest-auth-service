definitions:
  accountcommands.CreateAccountCmdDTO:
    properties:
      email:
        type: string
      full-name:
        type: string
      password:
        type: string
      phone-number:
        type: string
      role-name:
        type: string
    type: object
  accountcommands.UpdateAccountCmdDTO:
    properties:
      avatar:
        type: string
      email:
        type: string
      full-name:
        type: string
      phone-number:
        type: string
    type: object
  accountqueries.AccountIdsQuery:
    properties:
      ids:
        items:
          type: string
        type: array
      role:
        type: string
    type: object
  accountqueries.FieldFilterAccount:
    properties:
      email:
        type: string
      full-name:
        type: string
      phone-number:
        type: string
      role:
        type: string
    type: object
  accountqueries.FilterAccountQuery:
    properties:
      filter:
        $ref: '#/definitions/accountqueries.FieldFilterAccount'
      paging:
        $ref: '#/definitions/common.Paging'
    type: object
  accountqueries.LoginByPhoneRequestDTO:
    properties:
      password:
        type: string
      phone-number:
        type: string
    type: object
  common.Paging:
    properties:
      page:
        type: integer
      size:
        type: integer
      total:
        type: integer
    type: object
info:
  contact: {}
  description: |-
    Auth-service: https://api.curanest.com.vn/auth/swagger/index.html.
    Patient-service: https://api.curanest.com.vn/patient/swagger/index.html.
    Nurse-service: https://api.curanest.com.vn/nurse/swagger/index.html.
    Appointment-service (not ready - expected): https://api.curanest.com.vn/appointment/swagger/index.html.
    Notification-service (not ready - expected): https://api.curanest.com.vn/notification/swagger/index.html.
  title: Authentication Service
  version: "1.0"
paths:
  /api/v1/accounts/login:
    post:
      consumes:
      - application/json
      description: login by phone number
      parameters:
      - description: account creation data
        in: body
        name: form
        required: true
        schema:
          $ref: '#/definitions/accountqueries.LoginByPhoneRequestDTO'
      produces:
      - application/json
      responses:
        "200":
          description: data
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad request error
          schema: {}
      summary: login by phone number
      tags:
      - account
  /api/v1/roles:
    get:
      consumes:
      - application/json
      description: get roles
      produces:
      - application/json
      responses:
        "200":
          description: data
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad request error
          schema: {}
      summary: get roles
      tags:
      - roles
  /external/rpc/accounts:
    post:
      consumes:
      - application/json
      description: create account
      parameters:
      - description: account creation data
        in: body
        name: form
        required: true
        schema:
          $ref: '#/definitions/accountcommands.CreateAccountCmdDTO'
      produces:
      - application/json
      responses:
        "200":
          description: data
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad request error
          schema: {}
      summary: create account
      tags:
      - 'rpc: account'
  /external/rpc/accounts/{account-id}:
    delete:
      consumes:
      - application/json
      description: delete account
      parameters:
      - description: Account ID (UUID)
        in: path
        name: account-id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: data
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad request error
          schema: {}
      security:
      - ApiKeyAuth: []
      summary: delete account
      tags:
      - 'rpc: account'
    put:
      consumes:
      - application/json
      description: update account
      parameters:
      - description: Account ID (UUID)
        in: path
        name: account-id
        required: true
        type: string
      - description: account data to update
        in: body
        name: form
        required: true
        schema:
          $ref: '#/definitions/accountcommands.UpdateAccountCmdDTO'
      produces:
      - application/json
      responses:
        "200":
          description: data
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad request error
          schema: {}
      security:
      - ApiKeyAuth: []
      summary: update account
      tags:
      - 'rpc: account'
  /external/rpc/accounts/by-ids:
    post:
      consumes:
      - application/json
      description: get account by ids
      parameters:
      - description: account creation data
        in: body
        name: form
        required: true
        schema:
          $ref: '#/definitions/accountqueries.AccountIdsQuery'
      produces:
      - application/json
      responses:
        "200":
          description: data
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad request error
          schema: {}
      security:
      - ApiKeyAuth: []
      summary: get account by ids
      tags:
      - 'rpc: account'
  /external/rpc/accounts/filter:
    post:
      consumes:
      - application/json
      description: get account with filter
      parameters:
      - description: account creation data
        in: body
        name: form
        required: true
        schema:
          $ref: '#/definitions/accountqueries.FilterAccountQuery'
      produces:
      - application/json
      responses:
        "200":
          description: data
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad request error
          schema: {}
      security:
      - ApiKeyAuth: []
      summary: get account with filter
      tags:
      - 'rpc: account'
  /external/rpc/accounts/me:
    get:
      consumes:
      - application/json
      description: get my account by token
      produces:
      - application/json
      responses:
        "200":
          description: data
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad request error
          schema: {}
      security:
      - ApiKeyAuth: []
      summary: get my account by token
      tags:
      - 'rpc: account'
  /ping:
    get:
      consumes:
      - application/json
      description: ping server
      produces:
      - application/json
      responses:
        "200":
          description: message success
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad request error
          schema: {}
      summary: ping server
      tags:
      - ping
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
